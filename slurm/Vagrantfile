# vi: set ft=ruby :

# Configuration for the Yum repository
slurm_repo = "
[slurm-packages]
name = slurm-packages
baseurl = #{ENV['SLURM_REPO']}
enabled = 1
gpgcheck = 0
"

Vagrant.configure("2") do |config|

  config.vm.hostname = "slurm"
  config.vm.provider :libvirt do |libvirt|
    libvirt.memory = 1024
    libvirt.cpus = 1
    libvirt.qemu_use_session = false
  end

  config.vm.box = "almalinux/8"
  config.vm.synced_folder ".", "/vagrant", type: "rsync"
  config.vm.network :private_network, :ip => "192.168.124.25"

  # Runs on all nodes...
  config.vm.provision "shell" do |s|
    s.privileged = true,
    s.inline = %Q(
      systemctl disable --now firewalld
      setenforce Permissive
      dnf install -y epel-release
      dnf config-manager --set-enabled powertools
    )
  end

  # Add a Yum repository configuration file on all nodes
  config.vm.provision "shell", privileged: true,
    inline: %Q(echo "#{slurm_repo}" > /etc/yum.repos.d/slurm-packages.repo)

  # Install and configure MUNGE on all nodes
  config.vm.provision "shell" do |s|
    s.privileged = true,
    s.inline = %Q(
      dnf install -y munge
      echo 123456789123456781234567812345678 > /etc/munge/munge.key
      chown munge:munge /etc/munge/munge.key
      chmod 600 /etc/munge/munge.key
      systemctl enable --now munge
    )
  end

  # Create the `slurm` user and a list for required directories for the services
  config.vm.provision "shell" do |s|
    s.privileged = true,
    s.inline = %Q(
      groupadd slurm --gid 900
      useradd slurm --system --gid 900 --shell /bin/bash \
              --no-create-home --home-dir /var/lib/slurm \
              --comment "SLURM workload manager"
      mkdir -p /etc/slurm /var/{lib,log,run}/slurm /var/spool/slurm/{d,ctld}
      chown slurm --recursive /var/lib/slurm /var/spool/slurm 
      chgrp slurm --recursive /var/lib/slurm /var/spool/slurm 
      dnf install -y slurm-slurmctld slurm-slurmd
      ln -sf /vagrant/slurm.conf /etc/slurm/slurm.conf
      systemctl restart slurmctld slurmd
    )
  end

end
