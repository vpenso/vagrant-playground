# vi: set ft=ruby :

# /etc/hosts configuration on all nodes
hosts = %q(
127.0.0.1       localhost localhost.localdomain 
192.168.200.2   wlm1
192.168.200.3   wlm2
192.168.200.4   db1
192.168.200.5   db2
192.168.200.20  ex0
192.168.200.21  ex1
192.168.200.22  ex2
192.168.200.23  ex3
)

# Configuration for the Yum repository
slurm_repo = "
[slurm-packages]
name = slurm-packages
baseurl = #{ENV['SLURM_REPO']}
enabled = 1
gpgcheck = 0
"

Vagrant.configure("2") do |config|

  # Make sure to have at least 1GB of memory ...otherwise dnf could crash
  config.vm.provider :libvirt do |libvirt|
    libvirt.memory = 1024
    libvirt.cpus = 1
    libvirt.qemu_use_session = false
  end

  config.vm.box = "almalinux/8"
  # sync the working-directory to the VM instances
  config.vm.synced_folder ".", "/vagrant", type: "rsync"

  # Runs on all nodes...
  config.vm.provision "shell" do |s|
    s.privileged = true,
    s.inline = %Q(
      systemctl disable --now firewalld
      setenforce Permissive
      dnf install -y epel-release
      dnf config-manager --set-enabled powertools
      echo "#{hosts}" > /etc/hosts
    )
  end

  # Add a Yum repository configuration file on all nodes
  config.vm.provision "shell", privileged: true,
    inline: %Q(echo "#{slurm_repo}" > /etc/yum.repos.d/slurm-packages.repo)

  # Install and configure MUNGE on all nodes
  config.vm.provision "shell" do |s|
    s.privileged = true,
    s.inline = %Q(
      dnf install -y munge
      echo 123456789123456781234567812345678 > /etc/munge/munge.key
      chown munge:munge /etc/munge/munge.key
      chmod 600 /etc/munge/munge.key
      systemctl enable --now munge
    )
  end

  # Create the `slurm` user and a list for required directories for the services
  config.vm.provision "shell" do |s|
    s.privileged = true,
    s.inline = %Q(
      groupadd slurm --gid 900
      useradd slurm --system --gid 900 --shell /bin/bash \
              --no-create-home --home-dir /var/lib/slurm \
              --comment "SLURM workload manager"
      mkdir -p /etc/slurm /var/{lib,log,run}/slurm /var/spool/slurm/{d,ctld}
      chown slurm --recursive /var/lib/slurm /var/spool/slurm 
      chgrp slurm --recursive /var/lib/slurm /var/spool/slurm 
    )
  end

  config.vm.define  "wlm1" do |node|
    node.vm.hostname = "wlm1"
    node.vm.network :private_network, 
      :ip => "192.168.200.2",
      :libvirt__network_name => "custom"

    node.vm.provision "shell" do |s|
      s.privileged = true,
      s.inline = %q(
        dnf install -y slurm-slurmctld
        ln -sf /vagrant/slurm.conf /etc/slurm/slurm.conf
        systemctl restart slurmctld
      )
    end
  end

  # TODO: ...add configurations for more service nodes

  nodes = %w(ex0 ex1 ex2)
  (0..(nodes.length - 1)).each do |num|
    name = nodes[num]
    config.vm.define "#{name}" do |node|
      node.vm.hostname = name
      node.vm.network :private_network, 
        :ip => "192.168.200.#{20+num}",
        :libvirt__network_name => "custom"
      node.vm.provision "shell" do |s|
        s.privileged = true,
        s.inline = %q(
          dnf install -y slurm-slurmd
          echo 'SLURMD_OPTIONS=--conf-server wlm1' >> /etc/sysconfig/slurmd
          systemctl restart slurmd
          rm -rf /etc/slurm
          ln -sf /var/spool/slurm/d/conf-cache/ /etc/slurm
        )
      end
    end
  end

  config.vm.define  "ex3" do |node|
    node.vm.hostname = "ex3"
    node.vm.network :private_network, 
      :ip => "192.168.200.23",
      :libvirt__network_name => "custom"

    node.vm.provision "shell", privileged: true,
      inline: "dnf install -y slurm-slurmd"
  end
  

end
